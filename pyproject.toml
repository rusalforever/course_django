[tool.poetry]
name = "course-django"
version = "0.1.0"
description = ""
authors = ["marcustas <stas.chernov@casafari.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.2.6"
faker = "^24.9.0"
django-modeltranslation = "^0.18.11"
pillow = "^10.3.0"
pydantic = "^2.7.1"
djangorestframework = "^3.15.1"
drf-yasg = "^1.21.7"
djangorestframework-simplejwt = "^5.3.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-exclude = [
    "*/__init__.py",
    "*/migrations"
]
line-length = 120
ignore = [
    "T201", #  Ignore print only for learn project, don't use on a real one
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN204",
    "ANN401",
    "D105",
    "D107",
    "D200",
    "D204",
    "D413",
    "F722",
    "B904",
    "F841", #  Only for course examples!!!
]
select = [
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "ERA", # eradicate
    "T20", # flake8-print
    "Q", # flake8-quotes
    "I", # isort
    "N", # pep8-naming
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
]

[tool.ruff.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.field_validator",
    "pydantic.model_validator",
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.isort]
split-on-trailing-comma = true
force-wrap-aliases = true
combine-as-imports = true
lines-after-imports = 2
